doctype html
html
  - selected = public.works._data.find(function (w) { return w.name == current.source; } );
  - url = public._data.meta.url + '/works/' + selected.name;
  - imageBaseUrl = public._data.meta.url + '/images/works/' + selected.name + '_';
  head
    != partial('../_shared/head', { title: selected.title, image: imageBaseUrl + '1.jpg', url: url } )
  body
    #nav-bar.show
      .g-wide-6-24.g-1-4.icon
        != partial('../_shared/haiiro_icon', { size: '15', color: '#e4e4e4', id: 'nav-icon' })
      .g-wide-12-24.g-2-3
        .g-wide-3-4.g-20-24
          p.title= selected.title
        .g-wide-1-4.g-4-24
          p.year= selected.published_year
    #images
      .g-wide-6-24.g-1-24
      .g-wide-12-24.g-22-24
        #image-list
        if selected.video
          iframe.video(width="100%", src= selected.video, frameborder="0", allowfullscreen)
    #description
      .g-wide-6-24.g-1-24
      .g-wide-12-24.g-11-12
        p.content!= selected.description.replace(/\n/g, "<br />")
        if selected.role
          h2 My Role:
          p= selected.role
        if selected.link
          h2 Related Links:
          p
            a(href= selected.link, target= '_blank')= selected.link

    != partial('../_shared/footer')

script.
  (function() {
    var imageLoadedCount = 0;
    var images = []
    for (var i = 1; i <= #{selected.image_count}; i++) {
      var im = new Image();
      im.onload = function() { imageLoadedCount++; };
      im.src = '#{imageBaseUrl}' + i + '.jpg';
      images.push(im);
    }
    var showImages = function(ims) {
      if (ims.length == 0) {
        u('#description, #footer, iframe.video').addClass('show');
        return;
      }
      else {
        setTimeout(function() {
          var im = ims.shift();
          u('#image-list').append(u('<img />').attr('src', im.src));
          showImages(ims);
        }, 800);
      }
    };

    var rects = u('svg.haiiro-icon#nav-icon > rect');
    var colors = "#{selected.colors}".split(',');
    var pallet = [];
    for (var i = 0; i < rects.length; i++) {
      pallet.push(colors.length > i ? colors[i] : (colors[i - colors.length] ? colors[i - colors.length] : colors[1]));
    }
    var paint = function(count) {
      if (count == 0 && imageLoadedCount == #{selected.image_count}) {
        for (var i = 0; i < rects.length; i++) u(rects.nodes[i]).attr('fill', pallet[i]);
        showImages(images);
        return;
      }
      else if (count == 0) {
        count += 100;
      }
      setTimeout(function() {
        var i = Math.floor((Math.random() * 7));
        var j = Math.floor((Math.random() * 7));
        u(rects.nodes[i]).attr('fill', pallet[j]);
        paint(count - 1);
      }, 15);
    };
    paint(100);
  })();
